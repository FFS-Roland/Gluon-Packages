#!/bin/sh
ME=$(basename $0)
if [ $(ps | grep -c "$ME") -gt 4 ]; then
  logger -s -t $ME "started twice"
  exit 1
fi
if [ ! -d "/proc/$(cat /var/run/fastd.mesh_vpn.pid)" ]; then
  logger -t $ME "fastd not running"
  exit 0
fi
if [ "$(uci get fastd.mesh_vpn_backbone.auto_segment)" = "0" ]; then
  logger -t $ME "auto_segment disabled"
  exit 0
fi
if [ "$(cat /proc/uptime | cut -d'.' -f1)" -lt 60 ]; then
  logger -t $ME "waiting for batman"
  exit 0
fi

BATSEG=$(batctl gwl | grep '* ' | cut -d' ' -f2 | cut -d':' -f4)
NODEID=$(uci get network.bat0.macaddr | sed 's/://g')
PUBKEY=$(/etc/init.d/fastd show_key mesh_vpn | cut -c1-12)
SEGINFO=$(nslookup ffs-${NODEID}-${PUBKEY}.segassign.freifunk-stuttgart.de ::1#54 | grep "2001:2:0:711::")

if [ -z "$SEGINFO" ]; then
  logger -t $ME "Node not registered"
  GITSEG=00
else
  GITSEG=$(printf "%02d" $(echo ${SEGINFO/Address 1: 2001:2:0:711::/} |cut -d' ' -f1 | cut -d':' -f2))
fi

if [ "$GITSEG" == "00" ]; then
  logger -t $ME "Unknown Segment"
  GITSEG=99
else
  if [ -n "$BATSEG" ] && [ "$BATSEG" != "$GITSEG" ]; then
    logger -t $ME "Avoiding Shortcut"
    GITSEG=99
  fi
fi

let PORT=GITSEG+10200
CHANGED=0
for i in `seq 1 10`;
do
  GW=$(printf "gw%02d" $i)
  OLDPEER=$(uci get fastd.mesh_vpn_backbone_peer_${GW}.remote)
  NEWPEER="\"${GW}s${GITSEG}.gw.freifunk-stuttgart.de\" port $PORT"

  if [ "$NEWPEER" != "$OLDPEER" ]; then
    uci set fastd.mesh_vpn_backbone_peer_${GW}.remote="$NEWPEER"
    CHANGED=1
  fi
done

if [ "$CHANGED" = "1" ]; then
  /sbin/ifdown client
  /etc/init.d/fastd restart
  /sbin/ifup client
  logger -t $ME "Set Segment: $GITSEG"
else
  logger -t $ME "No changes"
fi
